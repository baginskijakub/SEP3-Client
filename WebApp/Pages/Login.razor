@page "/auth/{state}"
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@using WebApp.Shared.Components.Login
@using System.Collections.Specialized
@inject NavigationManager navigationManager

<AuthorizeView>
    <NotAuthorized>
        <div class="login-wrapper">
            <div class="login-title-container">
                <div class="primary-title-container">
                    @if (state == "register")
                    {
                        <div class="primary-title">Create an account</div>

                    }
                    else if(state == "login")
                    {
                        <div class="primary-title">Log in</div>
                    }
                    else if(state == "updateLicense")
                    {
                        <div class="primary-title">Update license number</div>
                    }
                </div>
            </div>
            <LoginComp State="@state" UserType="@userType"></LoginComp>

        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public string state { get; set; }
    
    NameValueCollection queryParams;

    private string? userType;

    private bool isLicenseHidden;
    
    
    protected override void OnInitialized()
    {

    // Parse the query string of the current URL
        var uri = new Uri(navigationManager.Uri);
        queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);

        userType = queryParams["type"];

    }
}
