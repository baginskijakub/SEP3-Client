@page "/"
@using WebApp.Shared.Components.Buttons
@using System.Security.Claims
@inject NavigationManager navigationManager

<div class="home-page-wrapper">
    <div class="home-page-titles">
        <h1 class="title-primary">Your ride starts here</h1>
        <h5 class="title-secondary">Some placeholder text so that the thing doesnâ€™t look wierd</h5>
    </div>
    <div class="buttons-container">
        <SecondaryButton Text="Find a ride" OnClickFunction="@navigateToRides"></SecondaryButton>
        <PrimaryButton Text="I'm a driver" OnClickFunction="@navigateToDriver"></PrimaryButton>
    </div>
</div>


@code {
    
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    
    private bool isLoggedIn;
    private IEnumerable<Claim>? userClaims;
    private string name;
    string? hasLicenseNumber;
    
    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;
        userClaims = user.Claims;
        var enumerable = userClaims as Claim[] ?? userClaims.ToArray();
        hasLicenseNumber = enumerable.First(claim => claim.Type.Equals("hasLicenseNumber")).Value;
    }

    private void navigateToRides()
    {
        navigationManager.NavigateTo(isLoggedIn ? "/FindRides" : "/auth/register?type=passenger");
    }

    private void navigateToDriver()
    {
        if (isLoggedIn)
        {
            if (Boolean.Parse(hasLicenseNumber))
            {
                navigationManager.NavigateTo("/auth/register?type=driver");
            }
            else
            {
                navigationManager.NavigateTo("/auth/updateLicense");
            }
        }
        else
        {
            navigationManager.NavigateTo("/auth/register?type=driver");
        }
        
    }
}